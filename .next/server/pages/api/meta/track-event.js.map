{"version":3,"file":"pages/api/meta/track-event.js","mappings":"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","sources":["webpack://_N_E/./pages/api/meta/_meta-api.js","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/./pages/api/meta/track-event.js","webpack://_N_E/"],"sourcesContent":["export class MetaConversionsAPI {\r\n  constructor() {\r\n    this.pixelId = process.env.META_PIXEL_ID;\r\n    this.accessToken = process.env.META_ACCESS_TOKEN;\r\n    this.apiVersion = process.env.META_API_VERSION || 'v21.0';\r\n    this.baseUrl = 'https://graph.facebook.com';\r\n    \r\n    // Validate configuration\r\n    if (!this.pixelId || !this.accessToken) {\r\n      console.warn('‚ö†Ô∏è Meta API not properly configured - missing credentials');\r\n    }\r\n  }\r\n\r\n  async sendEvents(events) {\r\n    // If not configured, return a mock success response\r\n    if (!this.pixelId || !this.accessToken) {\r\n      console.warn('‚ö†Ô∏è Meta API not configured - returning mock response');\r\n      return {\r\n        events_received: events.length,\r\n        mock: true,\r\n        message: 'Meta API not configured'\r\n      };\r\n    }\r\n\r\n    try {\r\n      const url = `${this.baseUrl}/${this.apiVersion}/${this.pixelId}/events`;\r\n      \r\n      const payload = {\r\n        data: events,\r\n        access_token: this.accessToken\r\n      };\r\n\r\n      console.log('üì§ Sending to Meta API:', {\r\n        url: `${this.baseUrl}/${this.apiVersion}/${this.pixelId}/events`,\r\n        eventCount: events.length,\r\n        firstEventName: events[0]?.event_name\r\n      });\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        console.error('‚ùå Meta API Error Response:', result);\r\n        throw new Error(`Meta API Error: ${JSON.stringify(result)}`);\r\n      }\r\n\r\n      console.log('‚úÖ Meta API Success:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('‚ùå Meta API Error:', error);\r\n      \r\n      // Return a graceful error response instead of throwing\r\n      return {\r\n        error: true,\r\n        message: error.message,\r\n        events_received: events.length,\r\n        fallback: true\r\n      };\r\n    }\r\n  }\r\n\r\n  async hashData(data) {\r\n    if (!data) return null;\r\n    \r\n    try {\r\n      // Use Web Crypto API instead of Node's crypto module for Edge Runtime\r\n      const encoder = new TextEncoder();\r\n      const data_buffer = encoder.encode(data.toLowerCase().trim());\r\n      const hash = await crypto.subtle.digest('SHA-256', data_buffer);\r\n      return Array.from(new Uint8Array(hash))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n    } catch (error) {\r\n      console.warn('‚ö†Ô∏è Failed to hash data:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async generateEventId(userId, eventName, timestamp) {\r\n    try {\r\n      const baseString = `${userId || 'anonymous'}_${eventName}_${timestamp}`;\r\n      const encoder = new TextEncoder();\r\n      const data_buffer = encoder.encode(baseString);\r\n      const hash = await crypto.subtle.digest('MD5', data_buffer);\r\n      return Array.from(new Uint8Array(hash))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n    } catch (error) {\r\n      console.warn('‚ö†Ô∏è Failed to generate event ID:', error);\r\n      return `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n  }\r\n\r\n  async createEvent({\r\n    eventName,\r\n    eventTime = Math.floor(Date.now() / 1000),\r\n    eventSourceUrl,\r\n    userAgent,\r\n    ipAddress,\r\n    userData = {},\r\n    customData = {},\r\n    eventId,\r\n  }) {\r\n    const hashedUserData = {};\r\n    \r\n    try {\r\n      // Basic user data - hash all personal information\r\n      if (userData.email) {\r\n        const hashedEmail = await this.hashData(userData.email);\r\n        if (hashedEmail) hashedUserData.em = [hashedEmail];\r\n      }\r\n      if (userData.phone) {\r\n        const hashedPhone = await this.hashData(userData.phone);\r\n        if (hashedPhone) hashedUserData.ph = [hashedPhone];\r\n      }\r\n      if (userData.firstName) {\r\n        const hashedFirstName = await this.hashData(userData.firstName);\r\n        if (hashedFirstName) hashedUserData.fn = [hashedFirstName];\r\n      }\r\n      if (userData.lastName) {\r\n        const hashedLastName = await this.hashData(userData.lastName);\r\n        if (hashedLastName) hashedUserData.ln = [hashedLastName];\r\n      }\r\n      if (userData.externalId) {\r\n        hashedUserData.external_id = [userData.externalId];\r\n      }\r\n\r\n      // Facebook-specific parameters (don't hash these)\r\n      if (userData.fbc) {\r\n        hashedUserData.fbc = userData.fbc;\r\n      }\r\n      if (userData.fb_login_id) {\r\n        hashedUserData.fb_login_id = userData.fb_login_id;\r\n      }\r\n      if (userData.fbp) {\r\n        hashedUserData.fbp = userData.fbp;\r\n      }\r\n\r\n      // Location data - hash all location information\r\n      if (userData.zip) {\r\n        const hashedZip = await this.hashData(userData.zip);\r\n        if (hashedZip) hashedUserData.zp = [hashedZip];\r\n      }\r\n      if (userData.city) {\r\n        const hashedCity = await this.hashData(userData.city);\r\n        if (hashedCity) hashedUserData.ct = [hashedCity];\r\n      }\r\n      if (userData.state) {\r\n        const hashedState = await this.hashData(userData.state);\r\n        if (hashedState) hashedUserData.st = [hashedState];\r\n      }\r\n      \r\n      // Date of birth - hash\r\n      if (userData.dob) {\r\n        const hashedDob = await this.hashData(userData.dob);\r\n        if (hashedDob) hashedUserData.db = [hashedDob];\r\n      }\r\n\r\n      // Client info - don't hash these\r\n      if (userAgent) {\r\n        hashedUserData.client_user_agent = userAgent;\r\n      }\r\n      if (ipAddress) {\r\n        hashedUserData.client_ip_address = ipAddress;\r\n      }\r\n\r\n      // Remove these from user_data - they should be in custom_data instead\r\n      // if (userData.referrer) {\r\n      //   hashedUserData.referrer = userData.referrer;\r\n      // }\r\n      // if (userData.page_url) {\r\n      //   hashedUserData.page_url = userData.page_url;\r\n      // }\r\n\r\n      const generatedEventId = eventId || await this.generateEventId(userData.externalId, eventName, eventTime);\r\n\r\n      // Move referrer and page_url to custom_data\r\n      const enrichedCustomData = {\r\n        ...customData,\r\n        ...(userData.referrer && { referrer: userData.referrer }),\r\n        ...(userData.page_url && { page_url: userData.page_url }),\r\n        ...(userData.page_path && { page_path: userData.page_path }),\r\n      };\r\n\r\n      return {\r\n        event_name: eventName,\r\n        event_time: eventTime,\r\n        event_id: generatedEventId,\r\n        event_source_url: eventSourceUrl,\r\n        action_source: 'website',\r\n        user_data: hashedUserData,\r\n        custom_data: enrichedCustomData,\r\n      };\r\n    } catch (error) {\r\n      console.error('‚ùå Error creating event:', error);\r\n      \r\n      // Return a basic event structure as fallback\r\n      return {\r\n        event_name: eventName,\r\n        event_time: eventTime,\r\n        event_id: `fallback_${Date.now()}`,\r\n        event_source_url: eventSourceUrl,\r\n        action_source: 'website',\r\n        user_data: {},\r\n        custom_data: customData,\r\n        fallback: true\r\n      };\r\n    }\r\n  }\r\n} ","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");","export const config = {\r\n  runtime: 'edge',\r\n};\r\n\r\nimport { MetaConversionsAPI } from './_meta-api.js';\r\n\r\nexport default async function handler(req) {\r\n  // Handle CORS preflight\r\n  if (req.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n        'Access-Control-Max-Age': '86400'\r\n      }\r\n    });\r\n  }\r\n\r\n  // Only allow POST\r\n  if (req.method !== 'POST') {\r\n    return new Response(JSON.stringify({ message: 'Method not allowed' }), {\r\n      status: 405,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n\r\n  // Check if Meta tracking is properly configured\r\n  const isMetaConfigured = process.env.META_PIXEL_ID && process.env.META_ACCESS_TOKEN;\r\n  \r\n  if (!isMetaConfigured) {\r\n    console.warn('‚ö†Ô∏è Meta tracking not configured - missing environment variables');\r\n    // Return success to prevent frontend errors, but log the issue\r\n    return new Response(JSON.stringify({ \r\n      success: true, \r\n      warning: 'Meta tracking not configured',\r\n      dev: true \r\n    }), {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n\r\n  try {\r\n    const body = await req.json();\r\n    const { eventName, userData = {}, customData = {}, eventSourceUrl } = body;\r\n\r\n    if (!eventName) {\r\n      return new Response(JSON.stringify({ error: 'eventName is required' }), {\r\n        status: 400,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('üîç Meta API called from:', req.headers.get('user-agent'));\r\n    console.log('üì§ Sending to Meta:', {\r\n      eventName,\r\n      pixelId: process.env.META_PIXEL_ID,\r\n      hasUserData: !!Object.keys(userData).length\r\n    });\r\n\r\n    const meta = new MetaConversionsAPI();\r\n    const event = await meta.createEvent({\r\n      eventName,\r\n      eventSourceUrl,\r\n      userAgent: req.headers.get('user-agent'),\r\n      ipAddress: req.headers.get('x-forwarded-for') || \r\n                req.headers.get('x-real-ip') || \r\n                req.headers.get('cf-connecting-ip') ||\r\n                '127.0.0.1',\r\n      userData,\r\n      customData\r\n    });\r\n\r\n    const result = await meta.sendEvents([event]);\r\n\r\n    return new Response(JSON.stringify({ \r\n      success: true,\r\n      result,\r\n      eventId: event.event_id \r\n    }), {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('‚ùå Meta API Error:', error);\r\n    \r\n    // Return a more graceful error response\r\n    return new Response(JSON.stringify({ \r\n      success: false,\r\n      error: 'Failed to track event',\r\n      details: error instanceof Error ? error.message : 'Unknown error',\r\n      // Don't expose sensitive error details in production\r\n      dev: process.env.NODE_ENV === 'development'\r\n    }), {\r\n      status: 200, // Changed from 500 to 200 to prevent frontend errors\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n} ","\n        import 'next/dist/esm/server/web/globals'\n        import { adapter } from 'next/dist/esm/server/web/adapter'\n        import { IncrementalCache } from 'next/dist/esm/server/lib/incremental-cache'\n        import { wrapApiHandler } from 'next/dist/esm/server/api-utils'\n\n        import handler from \"private-next-pages/api/meta/track-event.js\"\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/meta/track-event\" must export a `default` function');\n        }\n\n        export default function nHandler (opts) {\n          return adapter({\n              ...opts,\n              IncrementalCache,\n              page: \"/api/meta/track-event\",\n              handler: wrapApiHandler(\"/api/meta/track-event\", handler),\n          })\n        }\n    "],"names":["MetaConversionsAPI","pixelId","process","env","META_PIXEL_ID","accessToken","META_ACCESS_TOKEN","apiVersion","META_API_VERSION","baseUrl","warn","sendEvents","events","console","events_received","length","mock","message","url","payload","data","access_token","log","eventCount","firstEventName","event_name","response","fetch","method","headers","body","JSON","stringify","result","json","ok","error","fallback","hashData","data_buffer","TextEncoder","encode","toLowerCase","trim","hash","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","padStart","join","generateEventId","userId","eventName","timestamp","baseString","Date","now","Math","random","substr","createEvent","eventTime","floor","eventSourceUrl","userAgent","ipAddress","userData","customData","eventId","hashedUserData","email","hashedEmail","em","phone","hashedPhone","ph","firstName","hashedFirstName","fn","lastName","hashedLastName","ln","externalId","external_id","fbc","fb_login_id","fbp","zip","hashedZip","zp","city","hashedCity","ct","state","hashedState","st","dob","hashedDob","db","client_user_agent","client_ip_address","generatedEventId","enrichedCustomData","referrer","page_url","page_path","event_time","event_id","event_source_url","action_source","user_data","custom_data","handler","req","Response","status","isMetaConfigured","success","warning","dev","get","hasUserData","Object","keys","meta","event","details","Error"],"sourceRoot":"","ignoreList":[]}